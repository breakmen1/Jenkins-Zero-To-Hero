pipeline {
  agent {
    docker {
      image 'akshaykumar0007/ultimate-cicd:v1' // Your custom Java 17 image
      args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL     = "http://3.80.188.149:9000"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "breakmen1"
    DOCKER_IMAGE  = "akshaykumar0007/ultimate-cicd:${BUILD_NUMBER}"
  }

  stages {

    stage('Clean Workspace') {
      steps {
        deleteDir() // Deletes all files in the workspace to avoid permission or cache issues
      }
    }

    stage('Checkout') {
      steps {
        checkout([$class: 'GitSCM',
          branches: [[name: 'main']],
          userRemoteConfigs: [[url: 'https://github.com/breakmen1/Jenkins-Zero-To-Hero']]
        ])
        sh 'echo "Checkout successful"'
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonar1', variable: 'SONAR_AUTH_TOKEN')]) {
          sh """
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_URL}
          """
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh """
            echo Logging into Docker Hub...
            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin

            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app

            echo Building Docker image ${DOCKER_IMAGE} ...
            docker build -t ${DOCKER_IMAGE} .

            echo Pushing Docker image ${DOCKER_IMAGE} ...
            docker push ${DOCKER_IMAGE}
          """
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'git-cred', variable: 'GITHUB_TOKEN')]) {
          sh """
            git config --global --add safe.directory /var/lib/jenkins/workspace/ultimate-cicd

            git checkout main
            git config user.email "akshaykumarpatil708@gmail.com"
            git config user.name "${GIT_USER_NAME}"
            sed -i "s|akshaykumar0007/ultimate-cicd:replaceTag|akshaykumar0007/ultimate-cicd:${BUILD_NUMBER}|g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          """
        }
      }
    }
  }
}


